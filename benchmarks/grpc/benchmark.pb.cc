// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: benchmark.proto

#include "benchmark.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpc_benchmark {
constexpr Uint64::Uint64(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : val_(uint64_t{0u}){}
struct Uint64DefaultTypeInternal {
  constexpr Uint64DefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Uint64DefaultTypeInternal() {}
  union {
    Uint64 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Uint64DefaultTypeInternal _Uint64_default_instance_;
constexpr Double::Double(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : val_(0){}
struct DoubleDefaultTypeInternal {
  constexpr DoubleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DoubleDefaultTypeInternal() {}
  union {
    Double _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DoubleDefaultTypeInternal _Double_default_instance_;
constexpr String::String(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : val_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StringDefaultTypeInternal {
  constexpr StringDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StringDefaultTypeInternal() {}
  union {
    String _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StringDefaultTypeInternal _String_default_instance_;
constexpr Vec_Uint64::Vec_Uint64(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : val_()
  , _val_cached_byte_size_(0){}
struct Vec_Uint64DefaultTypeInternal {
  constexpr Vec_Uint64DefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Vec_Uint64DefaultTypeInternal() {}
  union {
    Vec_Uint64 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Vec_Uint64DefaultTypeInternal _Vec_Uint64_default_instance_;
constexpr Vec_Double::Vec_Double(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : val_(){}
struct Vec_DoubleDefaultTypeInternal {
  constexpr Vec_DoubleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Vec_DoubleDefaultTypeInternal() {}
  union {
    Vec_Double _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Vec_DoubleDefaultTypeInternal _Vec_Double_default_instance_;
constexpr GenRandInts_Msg::GenRandInts_Msg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : min_(uint64_t{0u})
  , max_(uint64_t{0u})
  , sz_(uint64_t{0u}){}
struct GenRandInts_MsgDefaultTypeInternal {
  constexpr GenRandInts_MsgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GenRandInts_MsgDefaultTypeInternal() {}
  union {
    GenRandInts_Msg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GenRandInts_MsgDefaultTypeInternal _GenRandInts_Msg_default_instance_;
constexpr TenDoubles::TenDoubles(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : d1_(0)
  , d2_(0)
  , d3_(0)
  , d4_(0)
  , d5_(0)
  , d6_(0)
  , d7_(0)
  , d8_(0)
  , d9_(0)
  , d10_(0){}
struct TenDoublesDefaultTypeInternal {
  constexpr TenDoublesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TenDoublesDefaultTypeInternal() {}
  union {
    TenDoubles _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TenDoublesDefaultTypeInternal _TenDoubles_default_instance_;
constexpr ComplexObject::ComplexObject(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , vals_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(0)
  , flag1_(false)
  , flag2_(false){}
struct ComplexObjectDefaultTypeInternal {
  constexpr ComplexObjectDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ComplexObjectDefaultTypeInternal() {}
  union {
    ComplexObject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ComplexObjectDefaultTypeInternal _ComplexObject_default_instance_;
constexpr Empty::Empty(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct EmptyDefaultTypeInternal {
  constexpr EmptyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EmptyDefaultTypeInternal _Empty_default_instance_;
}  // namespace grpc_benchmark
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_benchmark_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_benchmark_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_benchmark_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_benchmark_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::Uint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::Uint64, val_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::Double, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::Double, val_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::String, val_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::Vec_Uint64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::Vec_Uint64, val_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::Vec_Double, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::Vec_Double, val_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::GenRandInts_Msg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::GenRandInts_Msg, min_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::GenRandInts_Msg, max_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::GenRandInts_Msg, sz_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::TenDoubles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::TenDoubles, d1_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::TenDoubles, d2_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::TenDoubles, d3_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::TenDoubles, d4_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::TenDoubles, d5_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::TenDoubles, d6_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::TenDoubles, d7_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::TenDoubles, d8_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::TenDoubles, d9_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::TenDoubles, d10_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::ComplexObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::ComplexObject, id_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::ComplexObject, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::ComplexObject, flag1_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::ComplexObject, flag2_),
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::ComplexObject, vals_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_benchmark::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpc_benchmark::Uint64)},
  { 7, -1, -1, sizeof(::grpc_benchmark::Double)},
  { 14, -1, -1, sizeof(::grpc_benchmark::String)},
  { 21, -1, -1, sizeof(::grpc_benchmark::Vec_Uint64)},
  { 28, -1, -1, sizeof(::grpc_benchmark::Vec_Double)},
  { 35, -1, -1, sizeof(::grpc_benchmark::GenRandInts_Msg)},
  { 44, -1, -1, sizeof(::grpc_benchmark::TenDoubles)},
  { 60, -1, -1, sizeof(::grpc_benchmark::ComplexObject)},
  { 71, -1, -1, sizeof(::grpc_benchmark::Empty)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_benchmark::_Uint64_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_benchmark::_Double_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_benchmark::_String_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_benchmark::_Vec_Uint64_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_benchmark::_Vec_Double_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_benchmark::_GenRandInts_Msg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_benchmark::_TenDoubles_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_benchmark::_ComplexObject_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_benchmark::_Empty_default_instance_),
};

const char descriptor_table_protodef_benchmark_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017benchmark.proto\022\016grpc_benchmark\"\025\n\006Uin"
  "t64\022\013\n\003val\030\001 \001(\004\"\025\n\006Double\022\013\n\003val\030\001 \001(\001\""
  "\025\n\006String\022\013\n\003val\030\001 \001(\t\"\031\n\nVec_Uint64\022\013\n\003"
  "val\030\001 \003(\004\"\031\n\nVec_Double\022\013\n\003val\030\001 \003(\001\"7\n\017"
  "GenRandInts_Msg\022\013\n\003min\030\001 \001(\004\022\013\n\003max\030\002 \001("
  "\004\022\n\n\002sz\030\003 \001(\004\"\205\001\n\nTenDoubles\022\n\n\002d1\030\001 \001(\001"
  "\022\n\n\002d2\030\002 \001(\001\022\n\n\002d3\030\003 \001(\001\022\n\n\002d4\030\004 \001(\001\022\n\n\002"
  "d5\030\005 \001(\001\022\n\n\002d6\030\006 \001(\001\022\n\n\002d7\030\007 \001(\001\022\n\n\002d8\030\010"
  " \001(\001\022\n\n\002d9\030\t \001(\001\022\013\n\003d10\030\n \001(\001\"U\n\rComplex"
  "Object\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\r\n\005flag"
  "1\030\003 \001(\010\022\r\n\005flag2\030\004 \001(\010\022\014\n\004vals\030\005 \001(\014\"\007\n\005"
  "Empty2\203\004\n\014RpcBenchmark\022=\n\tFibonacci\022\026.gr"
  "pc_benchmark.Uint64\032\026.grpc_benchmark.Uin"
  "t64\"\000\022L\n\013GenRandInts\022\037.grpc_benchmark.Ge"
  "nRandInts_Msg\032\032.grpc_benchmark.Vec_Uint6"
  "4\"\000\022>\n\006StdDev\022\032.grpc_benchmark.TenDouble"
  "s\032\026.grpc_benchmark.Double\"\000\022O\n\027AverageCo"
  "ntainer_uint64\022\032.grpc_benchmark.Vec_Uint"
  "64\032\026.grpc_benchmark.Double\"\000\022O\n\027AverageC"
  "ontainer_double\022\032.grpc_benchmark.Vec_Dou"
  "ble\032\026.grpc_benchmark.Double\"\000\022F\n\013HashCom"
  "plex\022\035.grpc_benchmark.ComplexObject\032\026.gr"
  "pc_benchmark.String\"\000\022<\n\nKillServer\022\025.gr"
  "pc_benchmark.Empty\032\025.grpc_benchmark.Empt"
  "y\"\000b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_benchmark_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_benchmark_2eproto = {
  false, false, 971, descriptor_table_protodef_benchmark_2eproto, "benchmark.proto", 
  &descriptor_table_benchmark_2eproto_once, nullptr, 0, 9,
  schemas, file_default_instances, TableStruct_benchmark_2eproto::offsets,
  file_level_metadata_benchmark_2eproto, file_level_enum_descriptors_benchmark_2eproto, file_level_service_descriptors_benchmark_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_benchmark_2eproto_getter() {
  return &descriptor_table_benchmark_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_benchmark_2eproto(&descriptor_table_benchmark_2eproto);
namespace grpc_benchmark {

// ===================================================================

class Uint64::_Internal {
 public:
};

Uint64::Uint64(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_benchmark.Uint64)
}
Uint64::Uint64(const Uint64& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  val_ = from.val_;
  // @@protoc_insertion_point(copy_constructor:grpc_benchmark.Uint64)
}

void Uint64::SharedCtor() {
val_ = uint64_t{0u};
}

Uint64::~Uint64() {
  // @@protoc_insertion_point(destructor:grpc_benchmark.Uint64)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Uint64::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Uint64::ArenaDtor(void* object) {
  Uint64* _this = reinterpret_cast< Uint64* >(object);
  (void)_this;
}
void Uint64::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Uint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_benchmark.Uint64)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  val_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Uint64::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 val = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          val_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Uint64::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_benchmark.Uint64)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 val = 1;
  if (this->_internal_val() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_val(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_benchmark.Uint64)
  return target;
}

size_t Uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_benchmark.Uint64)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 val = 1;
  if (this->_internal_val() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_val());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Uint64::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Uint64::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Uint64::GetClassData() const { return &_class_data_; }

void Uint64::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Uint64 *>(to)->MergeFrom(
      static_cast<const Uint64 &>(from));
}


void Uint64::MergeFrom(const Uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_benchmark.Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_val() != 0) {
    _internal_set_val(from._internal_val());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Uint64::CopyFrom(const Uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_benchmark.Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint64::IsInitialized() const {
  return true;
}

void Uint64::InternalSwap(Uint64* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(val_, other->val_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Uint64::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_benchmark_2eproto_getter, &descriptor_table_benchmark_2eproto_once,
      file_level_metadata_benchmark_2eproto[0]);
}

// ===================================================================

class Double::_Internal {
 public:
};

Double::Double(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_benchmark.Double)
}
Double::Double(const Double& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  val_ = from.val_;
  // @@protoc_insertion_point(copy_constructor:grpc_benchmark.Double)
}

void Double::SharedCtor() {
val_ = 0;
}

Double::~Double() {
  // @@protoc_insertion_point(destructor:grpc_benchmark.Double)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Double::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Double::ArenaDtor(void* object) {
  Double* _this = reinterpret_cast< Double* >(object);
  (void)_this;
}
void Double::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Double::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Double::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_benchmark.Double)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  val_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Double::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double val = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          val_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Double::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_benchmark.Double)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double val = 1;
  if (!(this->_internal_val() <= 0 && this->_internal_val() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_val(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_benchmark.Double)
  return target;
}

size_t Double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_benchmark.Double)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double val = 1;
  if (!(this->_internal_val() <= 0 && this->_internal_val() >= 0)) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Double::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Double::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Double::GetClassData() const { return &_class_data_; }

void Double::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Double *>(to)->MergeFrom(
      static_cast<const Double &>(from));
}


void Double::MergeFrom(const Double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_benchmark.Double)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from._internal_val() <= 0 && from._internal_val() >= 0)) {
    _internal_set_val(from._internal_val());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Double::CopyFrom(const Double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_benchmark.Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Double::IsInitialized() const {
  return true;
}

void Double::InternalSwap(Double* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(val_, other->val_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Double::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_benchmark_2eproto_getter, &descriptor_table_benchmark_2eproto_once,
      file_level_metadata_benchmark_2eproto[1]);
}

// ===================================================================

class String::_Internal {
 public:
};

String::String(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_benchmark.String)
}
String::String(const String& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  val_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_val().empty()) {
    val_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_val(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_benchmark.String)
}

void String::SharedCtor() {
val_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

String::~String() {
  // @@protoc_insertion_point(destructor:grpc_benchmark.String)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void String::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  val_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void String::ArenaDtor(void* object) {
  String* _this = reinterpret_cast< String* >(object);
  (void)_this;
}
void String::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void String::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_benchmark.String)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  val_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* String::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string val = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_val();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_benchmark.String.val"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* String::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_benchmark.String)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string val = 1;
  if (!this->_internal_val().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_val().data(), static_cast<int>(this->_internal_val().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_benchmark.String.val");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_val(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_benchmark.String)
  return target;
}

size_t String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_benchmark.String)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string val = 1;
  if (!this->_internal_val().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_val());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData String::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    String::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*String::GetClassData() const { return &_class_data_; }

void String::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<String *>(to)->MergeFrom(
      static_cast<const String &>(from));
}


void String::MergeFrom(const String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_benchmark.String)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_val().empty()) {
    _internal_set_val(from._internal_val());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void String::CopyFrom(const String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_benchmark.String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool String::IsInitialized() const {
  return true;
}

void String::InternalSwap(String* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &val_, lhs_arena,
      &other->val_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata String::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_benchmark_2eproto_getter, &descriptor_table_benchmark_2eproto_once,
      file_level_metadata_benchmark_2eproto[2]);
}

// ===================================================================

class Vec_Uint64::_Internal {
 public:
};

Vec_Uint64::Vec_Uint64(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  val_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_benchmark.Vec_Uint64)
}
Vec_Uint64::Vec_Uint64(const Vec_Uint64& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      val_(from.val_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_benchmark.Vec_Uint64)
}

void Vec_Uint64::SharedCtor() {
}

Vec_Uint64::~Vec_Uint64() {
  // @@protoc_insertion_point(destructor:grpc_benchmark.Vec_Uint64)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Vec_Uint64::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Vec_Uint64::ArenaDtor(void* object) {
  Vec_Uint64* _this = reinterpret_cast< Vec_Uint64* >(object);
  (void)_this;
}
void Vec_Uint64::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vec_Uint64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Vec_Uint64::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_benchmark.Vec_Uint64)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  val_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vec_Uint64::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint64 val = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_val(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_val(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vec_Uint64::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_benchmark.Vec_Uint64)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 val = 1;
  {
    int byte_size = _val_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_val(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_benchmark.Vec_Uint64)
  return target;
}

size_t Vec_Uint64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_benchmark.Vec_Uint64)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 val = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->val_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _val_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Vec_Uint64::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Vec_Uint64::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Vec_Uint64::GetClassData() const { return &_class_data_; }

void Vec_Uint64::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Vec_Uint64 *>(to)->MergeFrom(
      static_cast<const Vec_Uint64 &>(from));
}


void Vec_Uint64::MergeFrom(const Vec_Uint64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_benchmark.Vec_Uint64)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  val_.MergeFrom(from.val_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Vec_Uint64::CopyFrom(const Vec_Uint64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_benchmark.Vec_Uint64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec_Uint64::IsInitialized() const {
  return true;
}

void Vec_Uint64::InternalSwap(Vec_Uint64* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  val_.InternalSwap(&other->val_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Vec_Uint64::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_benchmark_2eproto_getter, &descriptor_table_benchmark_2eproto_once,
      file_level_metadata_benchmark_2eproto[3]);
}

// ===================================================================

class Vec_Double::_Internal {
 public:
};

Vec_Double::Vec_Double(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  val_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_benchmark.Vec_Double)
}
Vec_Double::Vec_Double(const Vec_Double& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      val_(from.val_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_benchmark.Vec_Double)
}

void Vec_Double::SharedCtor() {
}

Vec_Double::~Vec_Double() {
  // @@protoc_insertion_point(destructor:grpc_benchmark.Vec_Double)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Vec_Double::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Vec_Double::ArenaDtor(void* object) {
  Vec_Double* _this = reinterpret_cast< Vec_Double* >(object);
  (void)_this;
}
void Vec_Double::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vec_Double::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Vec_Double::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_benchmark.Vec_Double)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  val_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vec_Double::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated double val = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_val(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9) {
          _internal_add_val(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vec_Double::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_benchmark.Vec_Double)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double val = 1;
  if (this->_internal_val_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_val(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_benchmark.Vec_Double)
  return target;
}

size_t Vec_Double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_benchmark.Vec_Double)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double val = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_val_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Vec_Double::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Vec_Double::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Vec_Double::GetClassData() const { return &_class_data_; }

void Vec_Double::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Vec_Double *>(to)->MergeFrom(
      static_cast<const Vec_Double &>(from));
}


void Vec_Double::MergeFrom(const Vec_Double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_benchmark.Vec_Double)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  val_.MergeFrom(from.val_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Vec_Double::CopyFrom(const Vec_Double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_benchmark.Vec_Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec_Double::IsInitialized() const {
  return true;
}

void Vec_Double::InternalSwap(Vec_Double* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  val_.InternalSwap(&other->val_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Vec_Double::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_benchmark_2eproto_getter, &descriptor_table_benchmark_2eproto_once,
      file_level_metadata_benchmark_2eproto[4]);
}

// ===================================================================

class GenRandInts_Msg::_Internal {
 public:
};

GenRandInts_Msg::GenRandInts_Msg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_benchmark.GenRandInts_Msg)
}
GenRandInts_Msg::GenRandInts_Msg(const GenRandInts_Msg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&min_, &from.min_,
    static_cast<size_t>(reinterpret_cast<char*>(&sz_) -
    reinterpret_cast<char*>(&min_)) + sizeof(sz_));
  // @@protoc_insertion_point(copy_constructor:grpc_benchmark.GenRandInts_Msg)
}

void GenRandInts_Msg::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&min_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&sz_) -
    reinterpret_cast<char*>(&min_)) + sizeof(sz_));
}

GenRandInts_Msg::~GenRandInts_Msg() {
  // @@protoc_insertion_point(destructor:grpc_benchmark.GenRandInts_Msg)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GenRandInts_Msg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GenRandInts_Msg::ArenaDtor(void* object) {
  GenRandInts_Msg* _this = reinterpret_cast< GenRandInts_Msg* >(object);
  (void)_this;
}
void GenRandInts_Msg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenRandInts_Msg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GenRandInts_Msg::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_benchmark.GenRandInts_Msg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sz_) -
      reinterpret_cast<char*>(&min_)) + sizeof(sz_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenRandInts_Msg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 min = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          min_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 max = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          max_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 sz = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          sz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenRandInts_Msg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_benchmark.GenRandInts_Msg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 min = 1;
  if (this->_internal_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_min(), target);
  }

  // uint64 max = 2;
  if (this->_internal_max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_max(), target);
  }

  // uint64 sz = 3;
  if (this->_internal_sz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_sz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_benchmark.GenRandInts_Msg)
  return target;
}

size_t GenRandInts_Msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_benchmark.GenRandInts_Msg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 min = 1;
  if (this->_internal_min() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_min());
  }

  // uint64 max = 2;
  if (this->_internal_max() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_max());
  }

  // uint64 sz = 3;
  if (this->_internal_sz() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_sz());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GenRandInts_Msg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GenRandInts_Msg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GenRandInts_Msg::GetClassData() const { return &_class_data_; }

void GenRandInts_Msg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GenRandInts_Msg *>(to)->MergeFrom(
      static_cast<const GenRandInts_Msg &>(from));
}


void GenRandInts_Msg::MergeFrom(const GenRandInts_Msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_benchmark.GenRandInts_Msg)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_min() != 0) {
    _internal_set_min(from._internal_min());
  }
  if (from._internal_max() != 0) {
    _internal_set_max(from._internal_max());
  }
  if (from._internal_sz() != 0) {
    _internal_set_sz(from._internal_sz());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GenRandInts_Msg::CopyFrom(const GenRandInts_Msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_benchmark.GenRandInts_Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenRandInts_Msg::IsInitialized() const {
  return true;
}

void GenRandInts_Msg::InternalSwap(GenRandInts_Msg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenRandInts_Msg, sz_)
      + sizeof(GenRandInts_Msg::sz_)
      - PROTOBUF_FIELD_OFFSET(GenRandInts_Msg, min_)>(
          reinterpret_cast<char*>(&min_),
          reinterpret_cast<char*>(&other->min_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GenRandInts_Msg::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_benchmark_2eproto_getter, &descriptor_table_benchmark_2eproto_once,
      file_level_metadata_benchmark_2eproto[5]);
}

// ===================================================================

class TenDoubles::_Internal {
 public:
};

TenDoubles::TenDoubles(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_benchmark.TenDoubles)
}
TenDoubles::TenDoubles(const TenDoubles& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&d1_, &from.d1_,
    static_cast<size_t>(reinterpret_cast<char*>(&d10_) -
    reinterpret_cast<char*>(&d1_)) + sizeof(d10_));
  // @@protoc_insertion_point(copy_constructor:grpc_benchmark.TenDoubles)
}

void TenDoubles::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&d1_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&d10_) -
    reinterpret_cast<char*>(&d1_)) + sizeof(d10_));
}

TenDoubles::~TenDoubles() {
  // @@protoc_insertion_point(destructor:grpc_benchmark.TenDoubles)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TenDoubles::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TenDoubles::ArenaDtor(void* object) {
  TenDoubles* _this = reinterpret_cast< TenDoubles* >(object);
  (void)_this;
}
void TenDoubles::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TenDoubles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TenDoubles::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_benchmark.TenDoubles)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&d1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&d10_) -
      reinterpret_cast<char*>(&d1_)) + sizeof(d10_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TenDoubles::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double d1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          d1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double d2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          d2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double d3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          d3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double d4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          d4_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double d5 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          d5_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double d6 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          d6_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double d7 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          d7_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double d8 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          d8_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double d9 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          d9_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double d10 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 81)) {
          d10_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TenDoubles::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_benchmark.TenDoubles)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double d1 = 1;
  if (!(this->_internal_d1() <= 0 && this->_internal_d1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_d1(), target);
  }

  // double d2 = 2;
  if (!(this->_internal_d2() <= 0 && this->_internal_d2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_d2(), target);
  }

  // double d3 = 3;
  if (!(this->_internal_d3() <= 0 && this->_internal_d3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_d3(), target);
  }

  // double d4 = 4;
  if (!(this->_internal_d4() <= 0 && this->_internal_d4() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_d4(), target);
  }

  // double d5 = 5;
  if (!(this->_internal_d5() <= 0 && this->_internal_d5() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_d5(), target);
  }

  // double d6 = 6;
  if (!(this->_internal_d6() <= 0 && this->_internal_d6() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_d6(), target);
  }

  // double d7 = 7;
  if (!(this->_internal_d7() <= 0 && this->_internal_d7() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_d7(), target);
  }

  // double d8 = 8;
  if (!(this->_internal_d8() <= 0 && this->_internal_d8() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_d8(), target);
  }

  // double d9 = 9;
  if (!(this->_internal_d9() <= 0 && this->_internal_d9() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_d9(), target);
  }

  // double d10 = 10;
  if (!(this->_internal_d10() <= 0 && this->_internal_d10() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(10, this->_internal_d10(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_benchmark.TenDoubles)
  return target;
}

size_t TenDoubles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_benchmark.TenDoubles)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double d1 = 1;
  if (!(this->_internal_d1() <= 0 && this->_internal_d1() >= 0)) {
    total_size += 1 + 8;
  }

  // double d2 = 2;
  if (!(this->_internal_d2() <= 0 && this->_internal_d2() >= 0)) {
    total_size += 1 + 8;
  }

  // double d3 = 3;
  if (!(this->_internal_d3() <= 0 && this->_internal_d3() >= 0)) {
    total_size += 1 + 8;
  }

  // double d4 = 4;
  if (!(this->_internal_d4() <= 0 && this->_internal_d4() >= 0)) {
    total_size += 1 + 8;
  }

  // double d5 = 5;
  if (!(this->_internal_d5() <= 0 && this->_internal_d5() >= 0)) {
    total_size += 1 + 8;
  }

  // double d6 = 6;
  if (!(this->_internal_d6() <= 0 && this->_internal_d6() >= 0)) {
    total_size += 1 + 8;
  }

  // double d7 = 7;
  if (!(this->_internal_d7() <= 0 && this->_internal_d7() >= 0)) {
    total_size += 1 + 8;
  }

  // double d8 = 8;
  if (!(this->_internal_d8() <= 0 && this->_internal_d8() >= 0)) {
    total_size += 1 + 8;
  }

  // double d9 = 9;
  if (!(this->_internal_d9() <= 0 && this->_internal_d9() >= 0)) {
    total_size += 1 + 8;
  }

  // double d10 = 10;
  if (!(this->_internal_d10() <= 0 && this->_internal_d10() >= 0)) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TenDoubles::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TenDoubles::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TenDoubles::GetClassData() const { return &_class_data_; }

void TenDoubles::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TenDoubles *>(to)->MergeFrom(
      static_cast<const TenDoubles &>(from));
}


void TenDoubles::MergeFrom(const TenDoubles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_benchmark.TenDoubles)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from._internal_d1() <= 0 && from._internal_d1() >= 0)) {
    _internal_set_d1(from._internal_d1());
  }
  if (!(from._internal_d2() <= 0 && from._internal_d2() >= 0)) {
    _internal_set_d2(from._internal_d2());
  }
  if (!(from._internal_d3() <= 0 && from._internal_d3() >= 0)) {
    _internal_set_d3(from._internal_d3());
  }
  if (!(from._internal_d4() <= 0 && from._internal_d4() >= 0)) {
    _internal_set_d4(from._internal_d4());
  }
  if (!(from._internal_d5() <= 0 && from._internal_d5() >= 0)) {
    _internal_set_d5(from._internal_d5());
  }
  if (!(from._internal_d6() <= 0 && from._internal_d6() >= 0)) {
    _internal_set_d6(from._internal_d6());
  }
  if (!(from._internal_d7() <= 0 && from._internal_d7() >= 0)) {
    _internal_set_d7(from._internal_d7());
  }
  if (!(from._internal_d8() <= 0 && from._internal_d8() >= 0)) {
    _internal_set_d8(from._internal_d8());
  }
  if (!(from._internal_d9() <= 0 && from._internal_d9() >= 0)) {
    _internal_set_d9(from._internal_d9());
  }
  if (!(from._internal_d10() <= 0 && from._internal_d10() >= 0)) {
    _internal_set_d10(from._internal_d10());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TenDoubles::CopyFrom(const TenDoubles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_benchmark.TenDoubles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TenDoubles::IsInitialized() const {
  return true;
}

void TenDoubles::InternalSwap(TenDoubles* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TenDoubles, d10_)
      + sizeof(TenDoubles::d10_)
      - PROTOBUF_FIELD_OFFSET(TenDoubles, d1_)>(
          reinterpret_cast<char*>(&d1_),
          reinterpret_cast<char*>(&other->d1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TenDoubles::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_benchmark_2eproto_getter, &descriptor_table_benchmark_2eproto_once,
      file_level_metadata_benchmark_2eproto[6]);
}

// ===================================================================

class ComplexObject::_Internal {
 public:
};

ComplexObject::ComplexObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpc_benchmark.ComplexObject)
}
ComplexObject::ComplexObject(const ComplexObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  vals_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vals().empty()) {
    vals_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vals(), 
      GetArenaForAllocation());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag2_) -
    reinterpret_cast<char*>(&id_)) + sizeof(flag2_));
  // @@protoc_insertion_point(copy_constructor:grpc_benchmark.ComplexObject)
}

void ComplexObject::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
vals_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flag2_) -
    reinterpret_cast<char*>(&id_)) + sizeof(flag2_));
}

ComplexObject::~ComplexObject() {
  // @@protoc_insertion_point(destructor:grpc_benchmark.ComplexObject)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ComplexObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vals_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ComplexObject::ArenaDtor(void* object) {
  ComplexObject* _this = reinterpret_cast< ComplexObject* >(object);
  (void)_this;
}
void ComplexObject::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ComplexObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ComplexObject::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_benchmark.ComplexObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  vals_.ClearToEmpty();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag2_) -
      reinterpret_cast<char*>(&id_)) + sizeof(flag2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ComplexObject::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_benchmark.ComplexObject.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool flag1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          flag1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool flag2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          flag2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes vals = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_vals();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ComplexObject::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_benchmark.ComplexObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_benchmark.ComplexObject.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // bool flag1 = 3;
  if (this->_internal_flag1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_flag1(), target);
  }

  // bool flag2 = 4;
  if (this->_internal_flag2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_flag2(), target);
  }

  // bytes vals = 5;
  if (!this->_internal_vals().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_vals(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_benchmark.ComplexObject)
  return target;
}

size_t ComplexObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_benchmark.ComplexObject)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes vals = 5;
  if (!this->_internal_vals().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_vals());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // bool flag1 = 3;
  if (this->_internal_flag1() != 0) {
    total_size += 1 + 1;
  }

  // bool flag2 = 4;
  if (this->_internal_flag2() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ComplexObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ComplexObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ComplexObject::GetClassData() const { return &_class_data_; }

void ComplexObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ComplexObject *>(to)->MergeFrom(
      static_cast<const ComplexObject &>(from));
}


void ComplexObject::MergeFrom(const ComplexObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_benchmark.ComplexObject)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_vals().empty()) {
    _internal_set_vals(from._internal_vals());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_flag1() != 0) {
    _internal_set_flag1(from._internal_flag1());
  }
  if (from._internal_flag2() != 0) {
    _internal_set_flag2(from._internal_flag2());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ComplexObject::CopyFrom(const ComplexObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_benchmark.ComplexObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexObject::IsInitialized() const {
  return true;
}

void ComplexObject::InternalSwap(ComplexObject* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &vals_, lhs_arena,
      &other->vals_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComplexObject, flag2_)
      + sizeof(ComplexObject::flag2_)
      - PROTOBUF_FIELD_OFFSET(ComplexObject, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ComplexObject::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_benchmark_2eproto_getter, &descriptor_table_benchmark_2eproto_once,
      file_level_metadata_benchmark_2eproto[7]);
}

// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:grpc_benchmark.Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_benchmark.Empty)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Empty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Empty::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_benchmark_2eproto_getter, &descriptor_table_benchmark_2eproto_once,
      file_level_metadata_benchmark_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc_benchmark
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc_benchmark::Uint64* Arena::CreateMaybeMessage< ::grpc_benchmark::Uint64 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_benchmark::Uint64 >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_benchmark::Double* Arena::CreateMaybeMessage< ::grpc_benchmark::Double >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_benchmark::Double >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_benchmark::String* Arena::CreateMaybeMessage< ::grpc_benchmark::String >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_benchmark::String >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_benchmark::Vec_Uint64* Arena::CreateMaybeMessage< ::grpc_benchmark::Vec_Uint64 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_benchmark::Vec_Uint64 >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_benchmark::Vec_Double* Arena::CreateMaybeMessage< ::grpc_benchmark::Vec_Double >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_benchmark::Vec_Double >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_benchmark::GenRandInts_Msg* Arena::CreateMaybeMessage< ::grpc_benchmark::GenRandInts_Msg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_benchmark::GenRandInts_Msg >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_benchmark::TenDoubles* Arena::CreateMaybeMessage< ::grpc_benchmark::TenDoubles >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_benchmark::TenDoubles >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_benchmark::ComplexObject* Arena::CreateMaybeMessage< ::grpc_benchmark::ComplexObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_benchmark::ComplexObject >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_benchmark::Empty* Arena::CreateMaybeMessage< ::grpc_benchmark::Empty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_benchmark::Empty >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
