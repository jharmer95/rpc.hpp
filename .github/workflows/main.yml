---
name: cmake
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-gcc:
    name: Build w/ gcc
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install CMake and compilers
        run: |
          sudo apt update
          sudo apt install cmake ninja-build gcc
      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools
          pip install conan
          export PATH=$PATH:/home/runner/.local/bin
          echo $PATH
          conan --version
          sudo ln -s ~/.local/bin/conan /usr/local/bin/conan
      - name: Build with CMake (gcc)
        run: |
          mkdir build-gcc
          cd build-gcc
          cmake .. -G Ninja -DUSE_CONAN=ON -DBUILD_NJSON_ADAPTER=ON -DBUILD_RAPIDJSON_ADAPTER=ON -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_COMPILER=gcc -DCMAKE_BUILD_TYPE=RelWithDebInfo
          ninja
      - name: Run unit tests
        run: |
          tests/bin/rpc_server & ninja test
  build-clang:
    name: Build w/ clang
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install CMake and compilers
        run: |
          sudo apt update
          sudo apt install cmake ninja-build clang
      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools
          pip install conan
          export PATH=$PATH:/home/runner/.local/bin
          echo $PATH
          conan --version
          sudo ln -s ~/.local/bin/conan /usr/local/bin/conan
      - name: Build with CMake (clang)
        run: |
          mkdir build-clang
          cd build-clang
          cmake .. -G Ninja -DUSE_CONAN=ON -DBUILD_NJSON_ADAPTER=ON -DBUILD_RAPIDJSON_ADAPTER=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_BUILD_TYPE=RelWithDebInfo
          ninja
      - name: Run unit tests
        run: |
          tests/bin/rpc_server & ninja test
